#Based on https://pypi.python.org/pypi/token-bucket/0.2.0

import time

class HTB():

    MTU = 1500 + 56  # IEEE802.3 specifies a MTU of 1500 plus overhead generated by TCP protocol

    # HTB on Linux has no different bucket capacities, all the buckkets used same capacity given by the root
    def __init__(self):
        self._buckets = [500000, time.time(), 500000, 500000]

    def update_current_tokens(self):
        now = time.time()
        new_tokents = min(self._buckets[3], ((now - self._buckets[1]) * self._buckets[2]) +
                        self._buckets[0])
        print ("New tokents: ", new_tokents)
        self._buckets[0] = new_tokents

    def consume(self, num_tokens):
        
        now = time.time()
        new_tokents_no_limit = ((now - self._buckets[1]) * self._buckets[2]) + self._buckets[0]
        new_tokents = new_tokents_no_limit if new_tokents_no_limit < self._buckets[3] else self._buckets[3]
        
        print ("time: ", now)
        print ("tokents before calculation: ", self._buckets[0])
        print ("new_tokents_no_limit: ", new_tokents_no_limit)
        print ("New tokents: ", new_tokents)
        print ("taking: ", num_tokens)

        self._buckets[0] = new_tokents
        self._buckets[1] = now
        
        if self._buckets[0] < num_tokens:
            return False

        self._buckets[0] -= num_tokens
        
        return True
